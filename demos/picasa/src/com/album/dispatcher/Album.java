
package com.album.dispatcher;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import org.w3._2005.atom.Crediential;
import org.w3._2005.atom.EntryType;
import org.w3._2005.atom.FeedType;
import org.w3._2005.atom.LoginParameter;
import org.w3._2005.atom.LoginResponse;
import org.w3._2005.atom.Photo;
import org.w3._2005.atom.UIElements;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.1-hudson-749-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebService(name = "Album", targetNamespace = "http://album.com/dispatcher")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    org.w3._2005.atom.ObjectFactory.class,
    com.yahoo.search.mrss.ObjectFactory.class
})
public interface Album {


    /**
     * 
     * @param uiElementsProxy
     * @return
     *     returns org.w3._2005.atom.UIElements
     */
    @WebMethod
    @WebResult(name = "uiElements", partName = "uiElements")
    public UIElements getUIElements(
        @WebParam(name = "uiElementsProxy", partName = "uiElementsProxy")
        UIElements uiElementsProxy);

    /**
     * 
     * @param requestcontext
     * @return
     *     returns org.w3._2005.atom.LoginResponse
     * @throws ClientLoginFault
     */
    @WebMethod
    @WebResult(name = "requestcontext", partName = "requestcontext")
    public LoginResponse clientLogin(
        @WebParam(name = "requestcontext", partName = "requestcontext")
        LoginParameter requestcontext)
        throws ClientLoginFault
    ;

    /**
     * 
     * @param crediential
     * @return
     *     returns org.w3._2005.atom.FeedType
     */
    @WebMethod
    @WebResult(name = "requestcontext", partName = "requestcontext")
    public FeedType listAlbums(
        @WebParam(name = "crediential", partName = "crediential")
        Crediential crediential);

    /**
     * 
     * @param albumUrl
     * @param crediential
     * @return
     *     returns org.w3._2005.atom.FeedType
     */
    @WebMethod
    @WebResult(name = "response", partName = "response")
    public FeedType listPhotos(
        @WebParam(name = "crediential", partName = "crediential")
        Crediential crediential,
        @WebParam(name = "albumUrl", partName = "albumUrl")
        String albumUrl);

    /**
     * 
     * @param album
     * @param crediential
     * @return
     *     returns org.w3._2005.atom.FeedType
     */
    @WebMethod
    @WebResult(name = "response", partName = "response")
    public FeedType listPhotosByAlbumObject(
        @WebParam(name = "crediential", partName = "crediential")
        Crediential crediential,
        @WebParam(name = "album", partName = "album")
        EntryType album);

    /**
     * 
     * @param albumId
     * @param photoId
     * @return
     *     returns org.w3._2005.atom.Photo
     */
    @WebMethod
    @WebResult(name = "photo", partName = "photo")
    public Photo getPhotoById(
        @WebParam(name = "albumId", partName = "albumId")
        int albumId,
        @WebParam(name = "photoId", partName = "photoId")
        int photoId);

    /**
     * 
     * @param albumId
     * @return
     *     returns org.w3._2005.atom.EntryType
     */
    @WebMethod
    @WebResult(name = "entryType", partName = "entryType")
    public EntryType getAlbumById(
        @WebParam(name = "albumId", partName = "albumId")
        int albumId);

    /**
     * 
     * @param albumName
     * @return
     *     returns org.w3._2005.atom.EntryType
     */
    @WebMethod
    @WebResult(name = "entryType", partName = "entryType")
    public EntryType getAlbumByName(
        @WebParam(name = "albumName", partName = "albumName")
        String albumName);

    /**
     * 
     * @param albumName
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "albumID", partName = "albumID")
    public int getAlbumIDByName(
        @WebParam(name = "albumName", partName = "albumName")
        String albumName);

    /**
     * 
     * @param albumId
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(name = "albumVersion", partName = "albumVersion")
    public double getAlbumVersion(
        @WebParam(name = "albumId", partName = "albumId")
        int albumId);

    /**
     * 
     * @param photo
     */
    @WebMethod
    public void updatePhoto(
        @WebParam(name = "photo", partName = "photo")
        Photo photo);

}
